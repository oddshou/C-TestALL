//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace ConsoleAppTest.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UploadFileSoap", Namespace="http://tempuri.org/")]
    public partial class UploadFile : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback StartTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateThumbOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateThumb2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UnpackOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UploadFile() {
            this.Url = global::ConsoleAppTest.Properties.Settings.Default.ConsoleAppTest_localhost_UploadFile;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event StartTransferCompletedEventHandler StartTransferCompleted;
        
        /// <remarks/>
        public event TransferCompletedEventHandler TransferCompleted;
        
        /// <remarks/>
        public event GenerateThumbCompletedEventHandler GenerateThumbCompleted;
        
        /// <remarks/>
        public event GenerateThumb2CompletedEventHandler GenerateThumb2Completed;
        
        /// <remarks/>
        public event UnpackCompletedEventHandler UnpackCompleted;
        
        /// <remarks/>
        public event RemoveFileCompletedEventHandler RemoveFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StartTransfer(int appid, int subid, string rawFileName, int totalBlock, int totalLength, string md5) {
            object[] results = this.Invoke("StartTransfer", new object[] {
                        appid,
                        subid,
                        rawFileName,
                        totalBlock,
                        totalLength,
                        md5});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StartTransferAsync(int appid, int subid, string rawFileName, int totalBlock, int totalLength, string md5) {
            this.StartTransferAsync(appid, subid, rawFileName, totalBlock, totalLength, md5, null);
        }
        
        /// <remarks/>
        public void StartTransferAsync(int appid, int subid, string rawFileName, int totalBlock, int totalLength, string md5, object userState) {
            if ((this.StartTransferOperationCompleted == null)) {
                this.StartTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartTransferOperationCompleted);
            }
            this.InvokeAsync("StartTransfer", new object[] {
                        appid,
                        subid,
                        rawFileName,
                        totalBlock,
                        totalLength,
                        md5}, this.StartTransferOperationCompleted, userState);
        }
        
        private void OnStartTransferOperationCompleted(object arg) {
            if ((this.StartTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartTransferCompleted(this, new StartTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Transfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Transfer(string token, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileStream, int blockLes) {
            object[] results = this.Invoke("Transfer", new object[] {
                        token,
                        fileStream,
                        blockLes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferAsync(string token, byte[] fileStream, int blockLes) {
            this.TransferAsync(token, fileStream, blockLes, null);
        }
        
        /// <remarks/>
        public void TransferAsync(string token, byte[] fileStream, int blockLes, object userState) {
            if ((this.TransferOperationCompleted == null)) {
                this.TransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOperationCompleted);
            }
            this.InvokeAsync("Transfer", new object[] {
                        token,
                        fileStream,
                        blockLes}, this.TransferOperationCompleted, userState);
        }
        
        private void OnTransferOperationCompleted(object arg) {
            if ((this.TransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferCompleted(this, new TransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateThumb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateThumb(string token) {
            object[] results = this.Invoke("GenerateThumb", new object[] {
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateThumbAsync(string token) {
            this.GenerateThumbAsync(token, null);
        }
        
        /// <remarks/>
        public void GenerateThumbAsync(string token, object userState) {
            if ((this.GenerateThumbOperationCompleted == null)) {
                this.GenerateThumbOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateThumbOperationCompleted);
            }
            this.InvokeAsync("GenerateThumb", new object[] {
                        token}, this.GenerateThumbOperationCompleted, userState);
        }
        
        private void OnGenerateThumbOperationCompleted(object arg) {
            if ((this.GenerateThumbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateThumbCompleted(this, new GenerateThumbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateThumb2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateThumb2(string fileName, int width, int height) {
            object[] results = this.Invoke("GenerateThumb2", new object[] {
                        fileName,
                        width,
                        height});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateThumb2Async(string fileName, int width, int height) {
            this.GenerateThumb2Async(fileName, width, height, null);
        }
        
        /// <remarks/>
        public void GenerateThumb2Async(string fileName, int width, int height, object userState) {
            if ((this.GenerateThumb2OperationCompleted == null)) {
                this.GenerateThumb2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateThumb2OperationCompleted);
            }
            this.InvokeAsync("GenerateThumb2", new object[] {
                        fileName,
                        width,
                        height}, this.GenerateThumb2OperationCompleted, userState);
        }
        
        private void OnGenerateThumb2OperationCompleted(object arg) {
            if ((this.GenerateThumb2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateThumb2Completed(this, new GenerateThumb2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Unpack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Unpack(string token) {
            object[] results = this.Invoke("Unpack", new object[] {
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnpackAsync(string token) {
            this.UnpackAsync(token, null);
        }
        
        /// <remarks/>
        public void UnpackAsync(string token, object userState) {
            if ((this.UnpackOperationCompleted == null)) {
                this.UnpackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnpackOperationCompleted);
            }
            this.InvokeAsync("Unpack", new object[] {
                        token}, this.UnpackOperationCompleted, userState);
        }
        
        private void OnUnpackOperationCompleted(object arg) {
            if ((this.UnpackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnpackCompleted(this, new UnpackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveFile(string fileName) {
            object[] results = this.Invoke("RemoveFile", new object[] {
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFileAsync(string fileName) {
            this.RemoveFileAsync(fileName, null);
        }
        
        /// <remarks/>
        public void RemoveFileAsync(string fileName, object userState) {
            if ((this.RemoveFileOperationCompleted == null)) {
                this.RemoveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFileOperationCompleted);
            }
            this.InvokeAsync("RemoveFile", new object[] {
                        fileName}, this.RemoveFileOperationCompleted, userState);
        }
        
        private void OnRemoveFileOperationCompleted(object arg) {
            if ((this.RemoveFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFileCompleted(this, new RemoveFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void StartTransferCompletedEventHandler(object sender, StartTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void TransferCompletedEventHandler(object sender, TransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GenerateThumbCompletedEventHandler(object sender, GenerateThumbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateThumbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateThumbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GenerateThumb2CompletedEventHandler(object sender, GenerateThumb2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateThumb2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateThumb2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UnpackCompletedEventHandler(object sender, UnpackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnpackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnpackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RemoveFileCompletedEventHandler(object sender, RemoveFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591